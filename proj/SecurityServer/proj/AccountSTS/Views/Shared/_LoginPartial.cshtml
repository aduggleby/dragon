@using Dragon.SecurityServer.AccountSTS.Helpers
@using Microsoft.AspNet.Identity
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", RequestHelper.ToRouteValues(Request.QueryString), FormMethod.Post, new Dictionary<string, object>{{"id", "logoutForm"}, {"class", "navbar-right"}}))
    {
    @Html.AntiForgeryToken()

    <ul class="nav navbar-nav navbar-right">
        @if (!string.IsNullOrEmpty(Request.Params["returnUrl"]))
        {
            <li><a href="@Request.Params["returnUrl"]">@Resources.Global.Return</a></li>
        }
        <li>
            <a href="#">@Resources.Global.HelloX.Replace("Name", User.Identity.GetUserName())</a><!--@Html.ActionLink(Resources.Global.HelloX.Replace("Name", User.Identity.GetUserName()), "Index", "Manage", routeValues: null, htmlAttributes: new { title = Resources.Global.ManageTitle })-->
        </li>
        <li><a href="javascript:document.getElementById('logoutForm').submit()">@Resources.Global.LogOff</a></li>
    </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink(Resources.Global.RegisterTitle, "Register", "Account", routeValues: RequestHelper.ToRouteValues(Request.QueryString), htmlAttributes: new Dictionary<string, object> { { "id", "registerLink" } })</li>
        <li>
            @Html.ActionLink(Resources.Global.LogIn, "Login", "Account", routeValues: RequestHelper.ToRouteValues(Request.QueryString), htmlAttributes: new Dictionary<string, object> { { "id", "loginLink" } })
        </li>
    </ul>
}
